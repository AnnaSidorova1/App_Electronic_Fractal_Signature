using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Numerics;

namespace form;

public partial class Form1 : Form
{
    

    public Form1()
    {
        InitializeComponent();
    }
    static Bitmap MandelbrotSet(PictureBox pictureBox1, double maxr, double minr, double maxi, double mini, int max_points)
    {
        Bitmap img = new Bitmap(pictureBox1.Width, pictureBox1.Height);
  
        Complex Z = new Complex( 0.0, -0.0);
	    Complex C = new Complex( 0.0, -0.0);
        int cnt_i = 0;
        int cnt_j = 0;
        int[,] Mandelbrot = new int[max_points, max_points];

        for (double i = minr; i < maxr ; i+=((double)(maxr-minr)/max_points))
	    {
            cnt_j = 0;
		    for (double j = mini; j < maxi; j+=((double)(maxi-mini)/max_points))
		    {
                double q = (double)(maxi-mini)/max_points;
                double m = (double)(maxr-minr)/max_points;
                Complex tmp = new Complex(i, j);
                Z = 0;
                //Z = (i, j);
                C = tmp;
			    int iteration = 0;
                //int v = 0;
                //int w = 0;
			    for (int k = 1; k < 300; k++)
			    {
				    Z = (Z * Z) + C;
				    if (Complex.Abs(Z) > 2.0)
				    {
                        double T = Complex.Abs(Z);
					    iteration = k;
                        //img.SetPixel(i+(img.Width/2), j + (img.Height/2), Color.Red);
                        //v = (int)i+(Math.Abs(maxr-minr));
                        //w = (int)j+(Math.Abs(maxi-mini));
                        Mandelbrot[cnt_i, cnt_j] = 1;
					    break;
				    }
			    }
                //img.SetPixel(i+(img.Width/2), j + (img.Height/2), Color.Red);
			    //DrawComplexPoint(g, ((int)i) + (iWidth/2), ((int)j) + (iHeight/2), iteration);
                //DrawComplexPoint(g, ((int)i) + (img.Width/2), ((int)j) + (img.Height/2), iteration);
                cnt_j++;
            }
            cnt_i++;
	    }

        for (int i = 0; i < Mandelbrot.GetLength(0); i++) 
        {
            for (int j = 0; j < Mandelbrot.GetLength(1); j++) 
            {
                if(Mandelbrot[i,j] == 1)
                    img.SetPixel(i, j, Color.White);
                else
                    img.SetPixel(i, j, Color.Black);
            }
        }
        using (Graphics g = Graphics.FromImage(img)) {
            Pen pengraph = new Pen(Color.YellowGreen, 0.75F);
            g.DrawLine(pengraph, 375, 0, 375, 500);
            g.DrawLine(pengraph, 0, 250, 500, 250);
        }
        return img;
    }
 
    private void Form1_Load(object sender, EventArgs e)
    {
    
    }        
    private void Control1_MouseClick(Object sender, MouseEventArgs ev) 
    {
        System.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();
        messageBoxCS.AppendFormat("{0} = {1}", "Button", ev.Button );
        messageBoxCS.AppendLine();
        messageBoxCS.AppendFormat("{0} = {1}", "Clicks", ev.Clicks );
        messageBoxCS.AppendLine();
        messageBoxCS.AppendFormat("{0} = {1}", "X", ev.X );
        messageBoxCS.AppendLine();
        messageBoxCS.AppendFormat("{0} = {1}", "Y", ev.Y );
        messageBoxCS.AppendLine();
        messageBoxCS.AppendFormat("{0} = {1}", "Delta", ev.Delta );
        messageBoxCS.AppendLine();
        messageBoxCS.AppendFormat("{0} = {1}", "Location", ev.Location );
        messageBoxCS.AppendLine();
        //MessageBox.Show(messageBoxCS.ToString(), "MouseClick Event" );
        System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-US");
        if (label7.Text == "")
        {
            double text = (double)(ev.X-375)/(double)250;
            double text2 = -((double)(ev.Y-250)/(double)250);
            label7.Text = text + " + " + text2 + "i";
            C = new Complex(text, text2);
        }
        else if (label8.Text == "")
        {
            double text = (double)(ev.X-375)/(double)250;
            double text2 = -((double)(ev.Y-250)/(double)250);
            label8.Text = text + " + " + text2 + "i";
            e = new Complex(text, text2);
        }
        else if (label9.Text == "")
        {
            double text = (double)(ev.X-375)/(double)250;
            double text2 = -((double)(ev.Y-250)/(double)250);
            label9.Text = text + " + " + text2 + "i";
            d = new Complex(text, text2);
        }
    }
    private void textBox1_KeyPress(object sender, KeyPressEventArgs e)
    {
        char number = e.KeyChar;
 
        if (!Char.IsDigit(number))
        {
            e.Handled = true;
        }
    }
    private void button1_Click(object sender, System.EventArgs ev)  
    {  
        if(textBox1.Text != "")
            m = int.Parse(textBox1.Text);
        if (textBox3.Text != "")
            x = int.Parse(textBox3.Text);
        if (textBox4.Text != "")
            n = int.Parse(textBox4.Text);
            if (n < x+1) {
                MessageBox.Show("n <= x, error"); 
                textBox4.Clear();
            }
        if (textBox2.Text != "")
            k = int.Parse(textBox2.Text);
            if (k < x+1) {
                MessageBox.Show("k <= x, error"); 
                textBox2.Clear();
            }
        if (textBox2.Text != "" &  textBox4.Text != "" & textBox3.Text != "") {
            Complex Z_n = C;
            for (int i = 0; i < n; i++) {
                Z_n = Z_n * C * C * e;
            }
            Complex P_a = Z_n * e;

            Complex Z_k = C;
            for (int i = 0; i < k; i++) {
                Z_k = Z_k * C * C * d;
            }
            Complex P_b = Z_k * d;

            Complex q_n = P_b;
            for (int i = 0; i < n; i++) {
                q_n = q_n * C * e;
            }
            Complex K_a = Complex.Pow(C, n-x) * q_n * e;
            K_a = new Complex(Math.Round(K_a.Real, 9), Math.Round(K_a.Imaginary, 9));

            Complex q_k = P_a;
            for (int i = 0; i < k; i++) {
                q_k = q_k * C * d;
            }
            Complex K_b = Complex.Pow(C, k-x) * q_k * d;
            K_b = new Complex(Math.Round(K_b.Real, 9), Math.Round(K_b.Imaginary, 9));

            Complex sign = K_a * m;
            Complex test = K_b * m;
            label15.Text = sign.ToString();
            if (sign == K_b * m)
                label16.Text = "Подпись верна";
            else
                label16.Text = "Подпись неверна";
        }   
    }  
        private void button2_Click(object sender, System.EventArgs e)  
    {  
        textBox1.Clear();
        textBox3.Clear();
        textBox4.Clear();
        textBox2.Clear();
        label7.Text = "";
        label8.Text = "";
        label9.Text = "";
        label15.Text = "";
        label16.Text = "";
    }  
}
