using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Numerics;

namespace form;

public partial class Form1 : Form
{
    

    public Form1()
    {
        InitializeComponent();
    }
    static Bitmap MandelbrotSet(PictureBox pictureBox1, double maxr, double minr, double maxi, double mini, int max_points)
    {
        //currentmaxr = maxr;
        //currentmaxi = maxi;
        //currentminr = minr;
        //currentmini = mini;
        Bitmap img = new Bitmap(pictureBox1.Width, pictureBox1.Height);
        //double zx = 0;
        //double zy = 0;
        //double cx = 0;
        //double cy = 0;
        //double xjump = ((maxr - minr) / Convert.ToDouble(img.Width));
        //double yjump = ((maxi - mini) / Convert.ToDouble(img.Height));
        //double tempzx = 0;

        Complex Z = new Complex( 0.0, -0.0);
	    Complex C = new Complex( 0.0, -0.0);
        int cnt_i = 0;
        int cnt_j = 0;
        int[,] Mandelbrot = new int[max_points, max_points];
	    //Complex Offset = new Complex( 0.0, -0.0);

        for (double i = minr; i < maxr ; i+=((double)(maxr-minr)/max_points))
	    {
            cnt_j = 0;
		    for (double j = mini; j < maxi; j+=((double)(maxi-mini)/max_points))
		    {
                double q = (double)(maxi-mini)/max_points;
                double m = (double)(maxr-minr)/max_points;
                Complex tmp = new Complex(i, j);
                Z = 0;
                //Z = (i, j);
                C = tmp;
			    int iteration = 0;
                //int v = 0;
                //int w = 0;
			    for (int k = 1; k < 300; k++)
			    {
				    Z = (Z * Z) + C;
				    if (Complex.Abs(Z) > 2.0)
				    {
                        double T = Complex.Abs(Z);
					    iteration = k;
                        //img.SetPixel(i+(img.Width/2), j + (img.Height/2), Color.Red);
                        //v = (int)i+(Math.Abs(maxr-minr));
                        //w = (int)j+(Math.Abs(maxi-mini));
                        Mandelbrot[cnt_i, cnt_j] = 1;
					    break;
				    }
			    }
                //img.SetPixel(i+(img.Width/2), j + (img.Height/2), Color.Red);
			    //DrawComplexPoint(g, ((int)i) + (iWidth/2), ((int)j) + (iHeight/2), iteration);
                //DrawComplexPoint(g, ((int)i) + (img.Width/2), ((int)j) + (img.Height/2), iteration);
                cnt_j++;
            }
            cnt_i++;
	    }

        for (int i = 0; i < Mandelbrot.GetLength(0); i++) 
        {
            for (int j = 0; j < Mandelbrot.GetLength(1); j++) 
            {
                if(Mandelbrot[i,j] == 1)
                    img.SetPixel(i, j, Color.White);
                else
                    img.SetPixel(i, j, Color.Black);
            }
        }

        return img;
    
    }
 
    private void Form1_Load(object sender, EventArgs e)
    {
    
    }        
}
